C51 COMPILER V9.01   PUTCHAR                                                               10/11/2014 14:44:41 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE PUTCHAR
OBJECT MODULE PLACED IN .\putchar.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE ..\SourceFile\putchar.c BROWSE DEBUG OBJECTEXTEND PRINT(.\putchar.lst) OBJE
                    -CT(.\putchar.obj)

line level    source

   1          /***********************************************************************/
   2          /*  This file is part of the C51 Compiler package                      */
   3          /*  Copyright KEIL ELEKTRONIK GmbH 1990 - 2002                         */
   4          /***********************************************************************/
   5          /*                                                                     */
   6          /*  PUTCHAR.C:  This routine is the general character output of C51.   */
   7          /*  You may add this file to a uVision2 project.                       */
   8          /*                                                                     */
   9          /*  To translate this file use C51 with the following invocation:      */
  10          /*     C51 PUTCHAR.C <memory model>                                    */
  11          /*                                                                     */
  12          /*  To link the modified PUTCHAR.OBJ file to your application use the  */
  13          /*  following Lx51 invocation:                                         */
  14          /*     Lx51 <your object file list>, PUTCHAR.OBJ <controls>            */
  15          /*                                                                     */
  16          /***********************************************************************/
  17          
  18          #include "reg52x2.h"
  19          
  20          #define XON  0x11
  21          #define XOFF 0x13
  22          
  23          
  24          /*
  25           * putchar (full version):  expands '\n' into CR LF and handles
  26           *                          XON/XOFF (Ctrl+S/Ctrl+Q) protocol
  27           */
  28          
  29          
  30           #if 0                                          /*原为此函数*/
               char putchar (char c) 
              {
                      while (!TI);
                      TI = 0;
                      return (SBUF = c);
              }
               
              char putchar (char c)  
              {
              
              if (c == '\n')  
                      {
                      if (RI)  
                              {
                              if (SBUF == XOFF)  
                                      {
                                      while (SBUF != XON) 
                                              {
                                              RI = 0;
                                               while (!RI);
                                              }
                                      RI = 0; 
                                      }
                              }
C51 COMPILER V9.01   PUTCHAR                                                               10/11/2014 14:44:41 PAGE 2   

                  while (!TI);
                  TI = 0;
                  SBUF = 0x0d;                         /* output CR  */
                      }
              if (RI)  
                      {
                      if (SBUF == XOFF)  
                              {
                              while (SBUF != XON)
                                      {
                              RI = 0;
                                      while (!RI);
                                      }
                              RI = 0; 
                              }
                      }
              while (!TI);
              TI = 0;
              return (SBUF = c);
              }
              #endif
  76          
  77          
  78          #if 0         /* comment out versions below     老版本，已不用*/
              
              /*
               * putchar (basic version): expands '\n' into CR LF
               */
              char putchar (char c)  
              {
                if (c == '\n')  
                      {
                      while (!TI);
                      TI = 0;
                      SBUF = 0x0d;                         /* output CR  */
                      }
                while (!TI);
                TI = 0;
                return (SBUF = c);
              }
              
              
              /*
               * putchar (mini version): outputs charcter only
               */
              char putchar (char c)  
              {
                while (!TI);
                TI = 0;
                return (SBUF = c);
              }
              #endif
 107          
 108          #if 1                                           
 109          /******************************************************************************************
 110          *函数名:                putchar
 111          *参数:                  c
 112          *返回值:                无
 113          *描述:                  为配合UART中断接收而修改的函数，主要修改TI和ES
 114                                                  支持Printf函数
 115          *编写:                  王绍伟
 116          *版本信息:              V1.0                    2003年8月15日
C51 COMPILER V9.01   PUTCHAR                                                               10/11/2014 14:44:41 PAGE 3   

 117          ******************************************************************************************/
 118          char putchar (char c)
 119          {
 120   1              bit bES;
 121   1              bES=ES;                 /*暂存ES内容*/
 122   1              ES=0;                   /*若 想利用TI标志位,就必须先禁止串口中断,否则会冲突*/
 123   1              if (c == '\n')  /*如果c为换行*/         
 124   1              {
 125   2                      SBUF = 0x0d;
 126   2                      while(!TI);     /*当TI为0时一直在循环*/
 127   2                      TI=0;   /*当TI为1时跳出循环,再将TI置为0*/
 128   2              }
 129   1              SBUF = c;
 130   1              while(!TI);
 131   1              TI=0;
 132   1              ES=bES;                 /*待字符发送完毕后,再恢复串口中断允许*/
 133   1              return(1);
 134   1      }
 135          
 136          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     31    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
